{
  "openapi": "3.0.1",
  "info": {
    "title": "Time Here Now API",
    "version": "20251007",
    "description": "API to get the current time based on timezone or client IP. Time zones and offsets are sourced from the IANA Time Zone Database (tzdb)."
  },
  "servers": [
    { "url": "https://timeherenow.rodit.org:8443/api" },
    { "url": "http://localhost:3000/api" }
  ],
  "externalDocs": {
    "description": "IANA Time Zone Database (tzdb)",
    "url": "https://www.iana.org/time-zones"
  },
  "paths": {
    "/timezone": {
      "put": {
        "summary": "a listing of all timezones.",
        "responses": {
          "default": {
            "$ref": "#/components/responses/SuccessfulListJsonResponse"
          }
        }
      }
    },
    
    "/timezone/area": {
      "put": {
        "summary": "a listing of all timezones available for that area.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["area"],
                "properties": {
                  "area": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "$ref": "#/components/responses/SuccessfulListJsonResponse" },
          "default": { "$ref": "#/components/responses/ErrorJsonResponse" }
        }
      }
    },
    
    "/timezone/time": {
      "put": {
        "summary": "request the current time for a timezone (falls back to user IP if timezone is omitted).",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "timezone": { "type": "string", "description": "IANA tzdb ID, e.g., Europe/Berlin or America/Indiana/Knox. If omitted, server will determine timezone from the user's IP." },
                  "locale": { "type": "string", "description": "Optional IETF BCP 47 locale tag or Accept-Language value to localize names and datetime" },
                  "area": { "type": "string", "deprecated": true, "description": "Legacy segmented parameter for timezone area. Prefer 'timezone'." },
                  "location": { "type": "string", "deprecated": true, "description": "Legacy segmented parameter for timezone location. Prefer 'timezone'." },
                  "region": { "type": "string", "deprecated": true, "description": "Legacy segmented parameter for timezone region. Prefer 'timezone'." }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "$ref": "#/components/responses/SuccessfulDateTimeJsonResponse" },
          "503": {
            "description": "NEAR time unavailable",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorJsonResponse" }
              }
            }
          },
          "default": { "$ref": "#/components/responses/ErrorJsonResponse" }
        }
      }
    },
    "/timezones/by-country": {
      "put": {
        "summary": "list timezones by ISO 3166-1 alpha-2 country code",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["country_code"],
                "properties": {
                  "country_code": { "type": "string", "description": "ISO 3166-1 alpha-2 country code, e.g., US, DE, IN" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "$ref": "#/components/responses/SuccessfulListJsonResponse" },
          "default": { "$ref": "#/components/responses/ErrorJsonResponse" }
        }
      }
    },
    
    
    "/ip": {
      "put": {
        "summary": "request the current time based on the ip of the request or provided IP (IPv4 or IPv6).",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ip": { "type": "string", "description": "Optional IPv4 or IPv6 address" },
                  "locale": { "type": "string", "description": "Optional IETF BCP 47 locale tag or Accept-Language value to localize names and datetime" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "$ref": "#/components/responses/SuccessfulDateTimeJsonResponse" },
          "503": {
            "description": "NEAR time unavailable",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorJsonResponse" }
              }
            }
          },
          "default": { "$ref": "#/components/responses/ErrorJsonResponse" }
        }
      }
    }
  ,
    "/sign/hash": {
      "put": {
        "summary": "Sign a base64url-encoded hash concatenated with the latest NEAR timestamp, likely_time_difference_ms, and public key.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["hash_b64url"],
                "properties": {
                  "hash_b64url": { "type": "string", "description": "Base64url-encoded hash. Decoded length must be 1..128 bytes." }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Signature and concatenated data",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SignHashResponse" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/ErrorJsonResponse" },
          "503": { "$ref": "#/components/responses/ErrorJsonResponse" },
          "default": { "$ref": "#/components/responses/ErrorJsonResponse" }
        }
      }
    },
    "/near-health": {
      "put": {
        "summary": "NEAR RPC health check",
        "responses": {
          "200": {
            "description": "NEAR RPC health status",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NearHealthResponse" }
              }
            }
          },
          "default": { "$ref": "#/components/responses/ErrorJsonResponse" }
        }
      }
    }
  },
  "components": {
    "responses": {
      "SuccessfulListJsonResponse": {
        "description": "the list of available timezones in JSON format",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ListJsonResponse"
            }
          }
        }
      },
      "SuccessfulDateTimeJsonResponse": {
        "description": "the current time for the timezone requested in JSON format",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DateTimeJsonResponse"
            }
          }
        }
      },
      "ErrorJsonResponse": {
        "description": "an error response in JSON format",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorJsonResponse"
            }
          }
        }
      }
    },
    "schemas": {
      "ListJsonResponse": {
        "type": "array",
        "description": "a list of available timezones",
        "items": {
          "type": "string"
        }
      },
      "DateTimeJsonResponse": {
        "type": "object",
        "required": [
          "user_ip",
          "date_time",
          "day_of_week",
          "day_of_year",
          "dst_trueorfalse",
          "dst_offset",
          "time_zone",
          "unix_time",
          "utc_datetime",
          "utc_offset",
          "week_number"
        ],
        "properties": {
          "user_ip": {
            "type": "string",
            "description": "the IP address of the user making the request (IPv4 or IPv6)"
          },
          "date_time": {
            "type": "string",
            "description": "an ISO8601-valid string representing the current, local date/time"
          },
          "day_of_week": {
            "type": "integer",
            "description": "ISO 8601 day number of the week (Monday=1 .. Sunday=7)"
          },
          "day_of_year": {
            "type": "integer",
            "description": "ordinal date of the current year"
          },
          "dst_trueorfalse": {
            "type": "boolean",
            "description": "flag indicating whether the local time is in daylight savings"
          },
          "dst_offset": {
            "type": "integer",
            "description": "the difference in seconds between the current local time and daylight saving time for the location"
          },
          "raw_offset": {
            "type": "integer",
            "description": "the difference in seconds between the current local time and the time in UTC, excluding any daylight saving difference (see dst_offset)"
          },
          "time_zone": {
            "type": "string",
            "description": "timezone in `Area/Location` or `Area/Location/Region` format"
          },
          "locale": {
            "type": "string",
            "description": "resolved locale used for localization"
          },
          "unix_time": {
            "type": "integer",
            "description": "number of seconds since the Epoch"
          },
          "utc_datetime": {
            "type": "string",
            "description": "an ISO8601-valid string representing the current date/time in UTC"
          },
          "utc_offset": {
            "type": "string",
            "description": "an ISO8601-valid string representing the offset from UTC"
          },
          "week_number": {
            "type": "integer",
            "description": "the current week number"
          },
          "likely_time_difference_ms": {
            "type": "integer",
            "description": "conservative >99% likely upper-bound difference (milliseconds) between real time and the returned time, based on 5Hz polling and ~0.6s block interval"
          }
        }
      },
      "NearHealthResponse": {
        "type": "object",
        "required": ["status", "timestamp"],
        "properties": {
          "status": { "type": "string", "enum": ["healthy", "unhealthy"] },
          "endpoint": { "type": "string" },
          "error": { "type": "string" },
          "timestamp": { "type": "string", "description": "ISO 8601 timestamp" },
          "cache_available": { "type": "boolean" },
          "last_fetch_timestamp": { "type": "string", "nullable": true },
          "last_fetch_age_ms": { "type": "integer", "nullable": true },
          "last_block_timestamp": { "type": "string", "nullable": true },
          "last_block_age_ms": { "type": "integer", "nullable": true },
          "poll_interval_ms": { "type": "integer" },
          "block_interval_ms": { "type": "integer" },
          "network_margin_ms": { "type": "integer" },
          "likely_time_difference_ms": { "type": "integer", "nullable": true }
        }
      },
      "ErrorJsonResponse": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string",
            "description": "details about the error encountered"
          }
        }
      },
      "SignHashResponse": {
        "type": "object",
        "required": ["data", "concatenated", "signature_base64url"],
        "properties": {
          "data": {
            "type": "object",
            "required": ["hash_b64url", "timestamp_iso", "likely_time_difference_ms", "public_key_base64url"],
            "properties": {
              "hash_b64url": { "type": "string" },
              "timestamp_iso": { "type": "string" },
              "likely_time_difference_ms": { "type": "integer" },
              "public_key_base64url": { "type": "string" }
            }
          },
          "concatenated": { "type": "string", "description": "String of 'hash_b64url.timestamp_iso.likely_time_difference_ms.public_key_base64url'" },
          "signature_base64url": { "type": "string" }
        }
      }
    }
  }
